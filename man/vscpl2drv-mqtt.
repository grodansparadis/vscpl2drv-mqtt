.\"t
.\" Automatically generated by Pandoc 2.2.1
.\"
.TH "vscpl2drv\-logger" "1" "September 28, 2019" "VSCP Level II Logger Driver" ""
.hy
.SH NAME
.PP
vscpl2drv\-logger \- VSCP Level I Logger Driver
.SH SYNOPSIS
.PP
vscpl2drv\-logger
.SH DESCRIPTION
.PP
vscpd level II driver for diagnostic logging.
It makes it possible to log VSCP events to a file.
Two formats of the log file is supported.
Either a standard log file with a standard text string for each event on
each line or loggings can be written on XML format.
The advantage ofthe later is that it can be read by VSCP works and
further analyzed there.
Several drivers can be loaded logging data to different output files and
using different filter/masks.
.SS Configuration string
.PP
A VSCP level II driver have access to the tcp/ip interface of the
machine is is installed on and frin that host get unique credentials to
allow it to log in to the tcp/ip interface.
The driver can use this as a method to initially fetch configuration
parameters.
The link is also used to as pass other data such as events to/from the
server.
.PP
The configuration string for vscpl2drv\-logger (set in
\f[I]/etc/vscp/vscpd.conf\f[]) have the following format
.IP
.nf
\f[C]
path;rewrite;vscpworksfmt;filter;mask
\f[]
.fi
.IP \[bu] 2
\f[B]path\f[] \- The absolute or relative path including the file name
to the file that log data should be written to.
Mandatory.
.IP \[bu] 2
\f[B]rewrite\f[] \- Set to `true' to create a new file or rewrite data
over an old file with new data.
Set to `false' to append data to an existing file (create it if it's not
available).
Defaults to `false'.
.IP \[bu] 2
\f[B]filter\f[] \- A Standard VSCP filter in string from
`priority,class,type,GUID'.
Example:
`1,0x0000,0x0006,ff:ff:ff:ff:ff:ff:ff:01:00:00:00:00:00:00:00:00'.
Defaults to an all zero filter.
.IP \[bu] 2
\f[B]mask\f[] \- Standard VSCP mask in string form
`priority,class,type,GUID'.
Example:
1,0x0000,0x0006,ff:ff:ff:ff:ff:ff:ff:01:00:00:00:00:00:00:00:00.
Defaults to an all zero mask.
.PP
The configuration string is the first configuration data that is read.
The driver will, after it is read, ask the server for driver specific
configuration data.
This data is fetched with the same pattern for all drivers.
Variables are formed by the driver name + some driver specific variable
name.
If this variable exist and contains data this will be used as
configuration for the driver.
.PP
For the vscpl2drv\-logger the following configuration variables are
defined
.PP
.TS
tab(@);
lw(32.5n) cw(10.0n) lw(27.5n).
T{
Variable name
T}@T{
Type
T}@T{
Description
T}
_
T{
**_path**
T}@T{
string
T}@T{
Path to the logfile.
T}
T{
**_rewrite**
T}@T{
bool
T}@T{
Set to \[lq]true\[rq] to rewrite the file each time the driver is
started.
Set to \[lq]false\[rq] to append to file.
T}
T{
**_vscpworksfmt**
T}@T{
bool
T}@T{
If \[lq]true\[rq] VSCP works XML format will be used for the log file.
This means that the file will be possible to read and further analyzed
by VSCP Works.
If \[lq]false\[rq] a standard text based format will be used.
T}
T{
**_filter**
T}@T{
string
T}@T{
Standard VSCP filter in string from.
1,0x0000,0x0006,ff:ff:ff:ff:ff:ff:ff:01:00:00:00:00:00:00:00:00 as
priority,class,type,GUID
T}
T{
**_mask**
T}@T{
string
T}@T{
Standard VSCP mask in string form.
1,0x0000,0x0006,ff:ff:ff:ff:ff:ff:ff:01:00:00:00:00:00:00:00:00 as
priority,class,type,GUID
T}
.TE
.SS Example of vscpd.conf entry for the logger driver.
.IP
.nf
\f[C]
<driver\ enable="true"\ >
\ \ \ \ <name>log1</name>
\ \ \ \ <path>/usr/local/lib/vscpl2_loggerdrv.so</path>
\ \ \ \ <config>/tmp/vscp_level2.log</config>
\ \ \ \ <guid>00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00</guid>
</driver>
\f[]
.fi
.PP
I this case the driver will fetch configuration data from the server
from variables \f[I]log1_path, log1_rewrite, log1_vscpworksfmt,
log1_filter and log1_mask\f[]
.PP
   *   *   *   *   *
.PP
There are many Level I drivers available in VSCP & Friends framework
that can be used with both VSCP Works and the VSCP Daemon and added to
that Level II and Level III drivers that can be used with the VSCP
Daemon.
.PP
Level I drivers is documented
here (https://grodansparadis.gitbooks.io/the-vscp-daemon/level_i_drivers.html).
.PP
Level II drivers is documented
here (https://grodansparadis.gitbooks.io/the-vscp-daemon/level_ii_drivers.html)
.PP
Level III drivers is documented
here (https://grodansparadis.gitbooks.io/the-vscp-daemon/level_iii_drivers.html)
.SH SEE ALSO
.PP
\f[C]vscpd\f[] (8).
\f[C]uvscpd\f[] (8).
\f[C]vscpworks\f[] (1).
\f[C]vscpcmd\f[] (1).
\f[C]vscp\-makepassword\f[] (1).
\f[C]vscphelperlib\f[] (1).
.PP
The VSCP project homepage is here <https://www.vscp.org>.
.PP
The manual (https://grodansparadis.gitbooks.io/the-vscp-daemon) for
vscpd contains full documentation.
Other documentation can be found here
<https://grodansparadis.gitbooks.io>.
.PP
The vscpd source code may be downloaded from
<https://github.com/grodansparadis/vscp>.
Source code for other system components of VSCP & Friends are here
<https://github.com/grodansparadis>
.SH COPYRIGHT
.PP
Copyright 2000\-2019 Åke Hedman, Grodans Paradis AB \- MIT license.
.SH AUTHORS
Åke Hedman, Grodans Paradis AB.
